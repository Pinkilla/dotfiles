" .vimrc
"
" Copyright (CC-BY) 2006 by PiT (Pierre BETTENS) <pbettens@heb.be>
"
" You can use this configuration file at your convenience.
" I think it's beter if you understand each couple attribute/value but ...
" Remember, I encourage whose do not understand to ask question. 
" I hope this file will make your work easier and your comprehension of vim
" better. 
" 
" I use this configuration file but I give NOT any warranty that this file 
" will work fine for you. If you don't like my abbreviation, just change it. 
" If part of this file is not usefull for you I don't care, cut it. 
" 
" Install: 	copy this file in ~/.vimrc (you probably rename it)
" 			add your own abbreviations in ~/.vim/abbreviations.vim
"
" since: 			january 1995
" last revision: 	10 october 2012 (Add solarized colorscheme)
"					28 february 2014 (I begin reading Steve Losh post)
"					15 march 2014 (After read Steve Losh post)
"					28 augustus 2014 
"						Adding color for background like solarized when I use 
"						VimRoom https://mikewest.github.io/vimroom/
"					23 october 2017
"						Adding surround.vim plugin 
"						https://vimawesome.com/plugin/surround-vim
"						command is cs
"


" Use of pathogen a super plugin for charging all others
filetype off
call pathogen#helptags()
call pathogen#runtime_append_all_bundles()
filetype plugin on
filetype indent on
" for vim-latex
set grepprg=grep\ -nH\ $*
let g:tex_flavor='latex'


" 
"
" Basic options 
" I say vim is not vi
set nocompatible
" Scrolling 
" I want my cursor always vertical centered
set scrolloff=5
" For a good indentation
set autoindent
set smartindent
set copyindent 
" I want to see parenthesis balance
set showmatch 
" I cut line to 80 char thus I have never long line and I mark the 82 column
set tabstop=4
set shiftwidth=4
set shiftround " use multiple of shiftwidth when indenting with '<' and '>'
" When lines are too long, wrap it for no horizontal scrolling. Don't cut line
" automatically execpt with `gq`
set wrap 
set textwidth=78
set colorcolumn=82
set formatoptions=qrn1j
" Set visual bell, ie turn off the beep sounds and replace it by flash screen
set vb
" Hide the mouse pointer while typing
set mousehide
" Increase  searching. When I search pattern with /foo, vim go to the fisrt f
" after I type f, then fisrt fo when I type fo ... 
set incsearch
"set hlsearch 
set ignorecase 	" ignore case when searching
set smartcase   " ignore case if search pattern is all lowercase,
                "    case-sensitive otherwise
" By default replace all occurrence on a line 
set gdefault
" By default search if vim know the file's syntax, if yes color with elflord
" color. You can choice your colorscheme in vi with TAB key
" I use « Solarized »
" You can find them at http://ethanschoonover.com/solarized/vim-colors-solarized
syntax on
colorscheme desert
let g:vimroom_ctermbackground = "black" 
if has("gui_running")
	set background=light
	colorscheme solarized
	set guifont=Liberation\ Mono\ 14
	" I use plugin VimRoom and I set background like solarized 
	let g:vimroom_guibackground = "#fdf6e3" 
endif
set backspace=indent,eol,start
                  " allow backspacing over everything in insert mode
" Max number of tabs when I open vim with -p option
set tabpagemax=25
" When vim start or open a file, it go to the dir who contain the file
set autochdir
" I want always see my statusline with filename, size and some other things
set laststatus=2
set statusline=%a\ %F%1*%m%*%10{getfsize(expand('%'))}o%10l/%L(%2c)
highlight StatusLine term=bold cterm=bold ctermbg=9
" I wan autocomplet like bash
set wildmenu
set wildmode=longest,list
" vim hide buffers instead of close them then I can close file without saving
set hidden
" remember more commands, more search history and more undo
set history=100
set undolevels=100
set undofile
set undodir=~/.vim/undo
set noswapfile
set wildignore=*.swp,*.bak,*.class
"
" set encryption method to blowfish2 when I use -x (or :X) for encryption
setlocal cm=blowfish2
"
"
"


"
"
" Dictionary
set spelllang=fr
"set spell 



"
"
" leader key
"
" vim dedicate a complete keyboard for user specific customization
" change the mapleader from \ to ,
let mapleader=","
" toggle paste because long paste indent lines lazzy
nnoremap <leader>tp :set paste!<cr>
" something like folding
nnoremap <leader>ft Vatzf
" toggle search highlight with space bar
nnoremap <leader><space> :set hlsearch!<cr>
" switch / toggle dictionary 
nnoremap <leader>ts :set spell!<cr>
nnoremap <leader>sfr :set spelllang=fr<cr>
nnoremap <leader>sen :set spelllang=en<cr>
" re-hardwrap paragraph of text (thank again Losh)
nnoremap <leader>q gqip
" split window (new or same) and go to left split or right split
nnoremap <leader>sn :vne<cr>
nnoremap <leader>s :vsp<cr>
nnoremap <leader>sl <C-w>l
nnoremap <leader>sr <C-w>r
" When I write text in markdown I like pandoc a PDF to see what Iw rite
nnoremap <leader>z :!pandoc --highlight-style=tango % -o %.pdf <cr>
nnoremap <leader>zo :!zathura %.pdf &<cr>
" Filetype fail on markdown file :-( 
nnoremap <leader>sm :set syntax=markdown<cr>

"
"
" end leader


" Jump to matching pairs easily, with Tab
nnoremap <Tab> %
vnoremap <Tab> %


"
"
" NERDTree settings {{{
"autocmd vimenter * NERDTree
" close vim if nerdtree is the last
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

nnoremap <leader>n :NERDTreeFocus<CR>
"nnoremap <leader>m :NERDTreeClose<CR>:NERDTreeFind<CR>
"nnoremap <leader>N :NERDTreeClose<CR>
nnoremap <leader>N :NERDTreeToggle<cr>

" Store the bookmarks file
let NERDTreeBookmarksFile=expand("$HOME/.vim/nerdtree/bm")

" Show the bookmarks table on startup
let NERDTreeShowBookmarks=1

" Show hidden files, too
"let NERDTreeShowFiles=1
"let NERDTreeShowHidden=1

" Quit on opening files from the tree
"let NERDTreeQuitOnOpen=1

" Highlight the selected entry in the tree
let NERDTreeHighlightCursorline=1

" Use a single click to fold/unfold directories and a double click to open
" files
let NERDTreeMouseMode=2

" Don't display these kinds of files
"let NERDTreeIgnore=[ '\.pyc$', '\.pyo$', '\.py\$class$', '\.obj$',
"            \ '\.o$', '\.so$', '\.egg$', '^\.git$' ]

" }}}
"
" TODO Comprendre le fonctionnement des boockmarks
"


"TODO
"au FileType *.java set dictionary+=$VIMRUNTIME/dict/java.dic complete+=k

" save on focus lost (when I change tab by example)
" TODO don't work
au FocusLost * :wa



"
"
"
" Some abbreviations or misspellings
" Synopsis: abbr key value
"
" Remember. A good abreviation has a key which is NOT a common word ^^
source ~/.vim/abbreviations.vim


